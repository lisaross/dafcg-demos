---
import type { TimeEstimate } from '../data/checklistData';

interface Props {
  title: string;
  description: string;
  timeEstimates: TimeEstimate[];
}

const { title, description, timeEstimates } = Astro.props;
---

<div class="prep-header">
  <h1>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon icon-xlarge">
      <rect x="8" y="2" width="8" height="4" rx="1" ry="1"/>
      <path d="m16 4-4 4-4-4"/>
      <path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"/>
    </svg>
    {title}
  </h1>
  <p>{description}</p>
  <div class="time-estimate">
    {timeEstimates.map((estimate) => (
      <div class="time-item">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="icon">
          {estimate.icon === 'clock' && (
            <>
              <circle cx="12" cy="12" r="10"/>
              <polyline points="12,6 12,12 16,14"/>
            </>
          )}
          {estimate.icon === 'timer' && (
            <>
              <line x1="10" y1="2" x2="14" y2="2"/>
              <line x1="12" y1="1" x2="12" y2="3"/>
              <path d="m20.2 5.2-.9-.9"/>
              <path d="m6.5 6.5-1.9-1.9"/>
              <circle cx="12" cy="12" r="7"/>
            </>
          )}
          {estimate.icon === 'gift' && (
            <>
              <polyline points="20,12 20,22 4,22 4,12"/>
              <rect x="2" y="7" width="20" height="5"/>
              <line x1="12" y1="22" x2="12" y2="7"/>
              <path d="m12 7-3-3 3-3 3 3z"/>
            </>
          )}
        </svg>
        {estimate.text}
      </div>
    ))}
  </div>
</div>

<style>
  .prep-header {
    background: #391892;
    color: white;
    padding: 40px;
    text-align: center;
  }

  .prep-header h1 {
    font-family: 'Cooper Hewitt', 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    font-size: 2.2em;
    font-weight: 700;
    margin-bottom: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }

  .prep-header p {
    font-size: 1.1em;
    opacity: 0.9;
    line-height: 1.5;
    margin-bottom: 20px;
  }

  .time-estimate {
    display: flex;
    justify-content: center;
    gap: 30px;
    margin-top: 25px;
  }

  .time-item {
    background: rgba(255, 255, 255, 0.15);
    padding: 10px 20px;
    border-radius: 10px;
    font-size: 0.9em;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .icon {
    width: 16px;
    height: 16px;
  }

  .icon-xlarge {
    width: 24px;
    height: 24px;
  }

  @media (max-width: 768px) {
    .prep-header {
      padding: 30px 20px;
    }
    
    .prep-header h1 {
      font-size: 1.8em;
    }
    
    .time-estimate {
      flex-direction: column;
      gap: 10px;
      align-items: center;
    }
  }
</style>