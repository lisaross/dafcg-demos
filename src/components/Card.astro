---
import { type HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'div'> {
  title?: string;
  description?: string;
  href?: string;
  status?: 'live' | 'demo' | 'interactive';
  meta?: string;
  variant?: 'default' | 'elevated' | 'outlined';
}

const { 
  title, 
  description, 
  href, 
  status, 
  meta,
  variant = 'default',
  class: className, 
  ...props 
} = Astro.props;

const baseClasses = "rounded-[10px] p-6 transition-all duration-300";
const variantClasses = {
  default: "bg-white shadow-sm border border-gray-200 hover:shadow-md hover:-translate-y-1",
  elevated: "bg-white shadow-lg border border-gray-200 hover:shadow-xl hover:-translate-y-2",
  outlined: "bg-white border-2 border-gray-200 hover:border-[#391892] hover:shadow-sm"
};

const cardClasses = `${baseClasses} ${variantClasses[variant]} ${className || ''}`;
---

{href ? (
  <a href={href} class={`block ${cardClasses}`} {...props}>
    <div class="space-y-4">
      {(status || meta) && (
        <div class="flex justify-between items-start">
          {status && (
            <span class={`inline-flex items-center px-3 py-1 rounded-[10px] text-xs font-cooper-hewitt uppercase font-semibold ${
              status === 'live' 
                ? 'bg-green-50 text-[#391892] border border-green-200' 
                : status === 'demo'
                ? 'bg-purple-50 text-[#391892] border border-purple-200'
                : 'bg-blue-50 text-[#391892] border border-blue-200'
            }`}>
              {status}
            </span>
          )}
          {meta && (
            <span class="text-sm text-gray-500 font-medium">
              {meta}
            </span>
          )}
        </div>
      )}
      
      {title && (
        <h3 class="text-xl font-bold text-[#391892] font-cooper-hewitt uppercase leading-tight">
          {title}
        </h3>
      )}
      
      {description && (
        <p class="text-gray-600 leading-relaxed">
          {description}
        </p>
      )}
      
      <slot />
      
      {href && (
        <div class="flex items-center text-[#391892] font-medium group">
          <span class="font-cooper-hewitt uppercase text-sm">View Details</span>
          <svg class="ml-2 w-4 h-4 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </div>
      )}
    </div>
  </a>
) : (
  <div class={cardClasses} {...props}>
    <div class="space-y-4">
      {(status || meta) && (
        <div class="flex justify-between items-start">
          {status && (
            <span class={`inline-flex items-center px-3 py-1 rounded-[10px] text-xs font-cooper-hewitt uppercase font-semibold ${
              status === 'live' 
                ? 'bg-green-50 text-[#391892] border border-green-200' 
                : status === 'demo'
                ? 'bg-purple-50 text-[#391892] border border-purple-200'
                : 'bg-blue-50 text-[#391892] border border-blue-200'
            }`}>
              {status}
            </span>
          )}
          {meta && (
            <span class="text-sm text-gray-500 font-medium">
              {meta}
            </span>
          )}
        </div>
      )}
      
      {title && (
        <h3 class="text-xl font-bold text-[#391892] font-cooper-hewitt uppercase leading-tight">
          {title}
        </h3>
      )}
      
      {description && (
        <p class="text-gray-600 leading-relaxed">
          {description}
        </p>
      )}
      
      <slot />
    </div>
  </div>
)}

<style>
  .font-cooper-hewitt {
    font-family: 'Cooper Hewitt', 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  }
</style>