---
import { type HTMLAttributes } from 'astro/types';

export interface Props extends HTMLAttributes<'div'> {
  value: number;
  max?: number;
  label?: string;
  showPercentage?: boolean;
  variant?: 'default' | 'success' | 'warning' | 'error';
  size?: 'sm' | 'default' | 'lg';
  animated?: boolean;
}

const { 
  value,
  max = 100,
  label,
  showPercentage = true,
  variant = 'default',
  size = 'default',
  animated = false,
  class: className,
  ...props 
} = Astro.props;

const percentage = Math.min(Math.max((value / max) * 100, 0), 100);

const containerClasses = {
  sm: "h-1",
  default: "h-2", 
  lg: "h-3"
};

const variantClasses = {
  default: "bg-[#391892]",
  success: "bg-[#18DD89]", 
  warning: "bg-yellow-500",
  error: "bg-red-500"
};

const backgroundClasses = "bg-gray-200";
---

<div class={`space-y-2 ${className || ''}`} {...props}>
  {(label || showPercentage) && (
    <div class="flex justify-between items-center text-sm">
      {label && (
        <span class="font-medium text-gray-700">{label}</span>
      )}
      {showPercentage && (
        <span class="font-cooper-hewitt uppercase text-xs font-bold text-[#391892]">
          {Math.round(percentage)}%
        </span>
      )}
    </div>
  )}
  
  <div class={`w-full ${backgroundClasses} rounded-[10px] overflow-hidden ${containerClasses[size]}`}>
    <div 
      class={`h-full rounded-[10px] transition-all duration-500 ease-out ${variantClasses[variant]} ${animated ? 'animate-pulse' : ''}`}
      style={`width: ${percentage}%`}
      role="progressbar"
      aria-valuenow={value}
      aria-valuemin="0"
      aria-valuemax={max}
      aria-label={label || `Progress: ${Math.round(percentage)}%`}
    ></div>
  </div>
</div>

<style>
  .font-cooper-hewitt {
    font-family: 'Cooper Hewitt', 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  }
  
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
    }
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>